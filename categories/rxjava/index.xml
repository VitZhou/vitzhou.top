<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rxjava on 周圣华的博客</title>
    <link>https://vitzhou.top/categories/rxjava/</link>
    <description>Recent content in Rxjava on 周圣华的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 08 Feb 2019 22:22:31 +0800</lastBuildDate>
    
	<atom:link href="https://vitzhou.top/categories/rxjava/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>详读RxJava(Scheduler实现)</title>
      <link>https://vitzhou.top/20190209_rxjava_3/</link>
      <pubDate>Fri, 08 Feb 2019 22:22:31 +0800</pubDate>
      
      <guid>https://vitzhou.top/20190209_rxjava_3/</guid>
      <description>&lt;p&gt;这篇文章主要介绍在RxJava中的Scheduler实现。阅读之前请先看&lt;a href=&#34;https://vitzhou.top/20190209_rxjava_1/&#34;&gt;数据的发送与接收&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>详读RxJava(Operator的实现)</title>
      <link>https://vitzhou.top/20190209_rxjava_2/</link>
      <pubDate>Fri, 08 Feb 2019 15:18:38 +0800</pubDate>
      
      <guid>https://vitzhou.top/20190209_rxjava_2/</guid>
      <description>&lt;p&gt;在RxJava中有非常多的Operator方法,比如map,flatMap,lift等。在这些Operatior中比较重要的是lift方法，因为很多操作都是基于lift来实现的,扩展lift还可以实现自定义Operator. 这篇内容主要是介绍lift,map,flatMap的实现(关于这些操作的作用请查阅官网,这里不做过多介绍)。阅读之前请先看本系列文章的&lt;a href=&#34;https://vitzhou.top/20190209_rxjava_1/&#34;&gt;第一篇&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>详读RxJava(数据的发送与接收)</title>
      <link>https://vitzhou.top/20190209_rxjava_1/</link>
      <pubDate>Fri, 08 Feb 2019 10:18:38 +0800</pubDate>
      
      <guid>https://vitzhou.top/20190209_rxjava_1/</guid>
      <description>&lt;p&gt;18年我就再尝试使用rxJava来解决网络IO问题.但是一直使用得不是很得心应手,原因是不太知道它的底层原理.这次春节正好有时间可以把RxJava的原理看一遍。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>