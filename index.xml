<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>周圣华的博客</title>
    <link>https://vitzhou.top/</link>
    <description>Recent content on 周圣华的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 08 Feb 2019 15:18:38 +0800</lastBuildDate>
    
	<atom:link href="https://vitzhou.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>详读RxJava(Operator的实现)</title>
      <link>https://vitzhou.top/20190209_rxjava_2/</link>
      <pubDate>Fri, 08 Feb 2019 15:18:38 +0800</pubDate>
      
      <guid>https://vitzhou.top/20190209_rxjava_2/</guid>
      <description>&lt;p&gt;在RxJava中有非常多的Operator方法,比如map,flatMap,lift等。在这些Operatior中比较重要的是lift方法，因为很多操作都是基于lift来实现的,扩展lift还可以实现自定义Operator. 这篇内容主要是介绍lift,map,flatMap的实现(关于这些操作的作用请查阅官网,这里不做过多介绍)。阅读之前请先看本系列文章的&lt;a href=&#34;https://vitzhou.top/20190209_rxjava_1/&#34;&gt;第一篇&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>详读RxJava(数据的发送与接收)</title>
      <link>https://vitzhou.top/20190209_rxjava_1/</link>
      <pubDate>Fri, 08 Feb 2019 10:18:38 +0800</pubDate>
      
      <guid>https://vitzhou.top/20190209_rxjava_1/</guid>
      <description>&lt;p&gt;18年我就再尝试使用rxJava来解决网络IO问题.但是一直使用得不是很得心应手,原因是不太知道它的底层原理.这次春节正好有时间可以把RxJava的原理看一遍。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>详读JUC系列之ReadWriteLock</title>
      <link>https://vitzhou.top/20180724_reetrantlock/</link>
      <pubDate>Sun, 26 Aug 2018 14:58:15 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180724_reetrantlock/</guid>
      <description>&lt;p&gt;虽然锁可以保证资源的线程安全,但是锁带来的性能损失也是不可以忽略的.尤其是在读多写少的场景下,如果你使用&lt;code&gt;synchronized&lt;/code&gt;或者&lt;code&gt;ReentrantLock&lt;/code&gt;会浪费非常大的性能.此时使用&lt;code&gt;ReentrantReadWriteLock&lt;/code&gt;会更合适

&lt;!--toc--&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring Transactional</title>
      <link>https://vitzhou.top/20180822_transation/</link>
      <pubDate>Wed, 22 Aug 2018 20:58:15 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180822_transation/</guid>
      <description>&lt;p&gt;今天遇到了个Spring的&lt;code&gt;@Transactional&lt;/code&gt;注解用法的问题(从此也可以看出自己数据库的薄弱,还是需要补这个基础).经过一个下午的源码阅读和debug终于解开了心中所惑,遂写下来记录一下.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThreadLocal详解(二)</title>
      <link>https://vitzhou.top/20180804_threadlocal/</link>
      <pubDate>Sat, 04 Aug 2018 14:58:15 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180804_threadlocal/</guid>
      <description>&lt;p&gt;接下来我们继续聊get,remove方法。以及ThreadLocal使用不当会发生的问题。

&lt;!--toc--&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThreadLocal详解(一)</title>
      <link>https://vitzhou.top/20180728_threadlocal/</link>
      <pubDate>Sat, 28 Jul 2018 23:02:44 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180728_threadlocal/</guid>
      <description>&lt;p&gt;最近工作中正好使用了ThreadLocal,之前对它底层实现不是非常清晰.今天正好看一遍&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>详读JUC系列(2)之AQS</title>
      <link>https://vitzhou.top/20180709_aqs_2/</link>
      <pubDate>Tue, 10 Jul 2018 12:51:42 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180709_aqs_2/</guid>
      <description>&lt;p&gt;AQS(二)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Prometheus Too Many Open file问题</title>
      <link>https://vitzhou.top/20180709_prometheus_many_file/</link>
      <pubDate>Mon, 09 Jul 2018 10:25:50 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180709_prometheus_many_file/</guid>
      <description>&lt;p&gt;Prometheus Too many open file问题定位&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>详读JUC系列(1)之AQS</title>
      <link>https://vitzhou.top/20180707_aqs/</link>
      <pubDate>Sun, 08 Jul 2018 12:51:42 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180707_aqs/</guid>
      <description>&lt;h2 id=&#34;详读j-u-c系列-1-之aqs&#34;&gt;详读J.U.C系列(1)之AQS&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Java 动态代理详解</title>
      <link>https://vitzhou.top/20180629_java_proxy/</link>
      <pubDate>Fri, 29 Jun 2018 22:51:42 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180629_java_proxy/</guid>
      <description>&lt;p&gt;今天我们聊聊java动态代理&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTTP proxy</title>
      <link>https://vitzhou.top/20180529_http_proxy/</link>
      <pubDate>Tue, 29 May 2018 18:51:42 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180529_http_proxy/</guid>
      <description>&lt;p&gt;最近在用Golang做httpProxy,看到一篇不错的老外博客.所以翻译一遍以备后用&lt;/p&gt;

&lt;p&gt;原文地址:&lt;a href=&#34;https://medium.com/@mlowicki/http-s-proxy-in-golang-in-less-than-100-lines-of-code-6a51c2f2c38c&#34;&gt;https://medium.com/@mlowicki/http-s-proxy-in-golang-in-less-than-100-lines-of-code-6a51c2f2c38c&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记一次k8s的网络实践</title>
      <link>https://vitzhou.top/20180428_k8s_network_sc/</link>
      <pubDate>Fri, 27 Apr 2018 18:51:42 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180428_k8s_network_sc/</guid>
      <description>&lt;p&gt;众所周知k8s的网络一直是个很头疼的问题,这两天我也遇到了网络的问题.本文记录这几天所遇到的问题,以及解决方案&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Prometheus命令</title>
      <link>https://vitzhou.top/20180328_prometheus_config/</link>
      <pubDate>Wed, 28 Mar 2018 20:51:05 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180328_prometheus_config/</guid>
      <description>&lt;p&gt;最近在用Prometheus收集数据,虽然网上资料现在有不少,但是命令和参数的描述都不够详细.这里简单记录我最近用到的一些配置&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>http2资料收集</title>
      <link>https://vitzhou.top/20180321_http2collection/</link>
      <pubDate>Wed, 21 Mar 2018 20:41:02 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180321_http2collection/</guid>
      <description>&lt;p&gt;今天开始学习http2,先搜集一些资料
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThreadPoolExecutor的Reject策略</title>
      <link>https://vitzhou.top/20180221_threadpoolexcutor_reject/</link>
      <pubDate>Wed, 21 Feb 2018 14:00:01 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180221_threadpoolexcutor_reject/</guid>
      <description>&lt;p&gt;今天我们专门聊聊ThreadPoolExecutor的拒绝策略
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThreadPoolExecutor(二)</title>
      <link>https://vitzhou.top/20180218_threadpoolexecutor2/</link>
      <pubDate>Sun, 18 Feb 2018 18:16:38 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180218_threadpoolexecutor2/</guid>
      <description>&lt;p&gt;接着上文继续看ThreadPoolExecutor
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThreadPoolExecutor(一)</title>
      <link>https://vitzhou.top/20180217_threadpoolexecutor/</link>
      <pubDate>Sun, 18 Feb 2018 11:07:44 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180217_threadpoolexecutor/</guid>
      <description>&lt;p&gt;之前去面试被问及到线程池的细节,各种被虐。今天将这个短板补上来.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Eureka Client配置详解</title>
      <link>https://vitzhou.top/20180213_eureka_client_config/</link>
      <pubDate>Tue, 13 Feb 2018 11:07:44 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180213_eureka_client_config/</guid>
      <description>&lt;p&gt;这次我们来详细聊聊eureka client服务的配置
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Eureka客户端注册流程</title>
      <link>https://vitzhou.top/20180211_eureka_client_registry/</link>
      <pubDate>Sun, 11 Feb 2018 15:09:33 +0800</pubDate>
      
      <guid>https://vitzhou.top/20180211_eureka_client_registry/</guid>
      <description>&lt;p&gt;本文的内容是Eureka Client的服务注册的主要流程,如果你是第一次使用Eureka Client,你可以先看&lt;a href=&#34;http://blog.didispace.com/Spring-Cloud%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/&#34;&gt;这里&lt;/a&gt;入门.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring Cloud Config自动刷新机制</title>
      <link>https://vitzhou.top/2018-02-spring-cloud-refresh-context/</link>
      <pubDate>Tue, 06 Feb 2018 14:31:23 +0800</pubDate>
      
      <guid>https://vitzhou.top/2018-02-spring-cloud-refresh-context/</guid>
      <description>&lt;p&gt;Spring Cloud Config自动刷新的主要流程
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://vitzhou.top/20190209_rxjava_3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vitzhou.top/20190209_rxjava_3/</guid>
      <description>&lt;p&gt;title: &amp;ldquo;详读RxJava(Scheduler实现)&amp;rdquo;
date: 2019-02-08T22:22:31+08:00
categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RxJava
tags:&lt;/li&gt;
&lt;li&gt;RxJava
keywords:&lt;/li&gt;
&lt;li&gt;RxJava
description: RxJava&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这篇文章主要介绍在RxJava中的Scheduler实现。阅读之前请先看&lt;a href=&#34;https://vitzhou.top/20190209_rxjava_1/&#34;&gt;数据的发送与接收&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>